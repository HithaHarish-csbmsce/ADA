class Solution{
    public static void Floyd(int[][] nums){
        int V = nums.length;
        for(int k=0;k<V;k++){
            for(int i=0;i<V;i++){
                for(int j=0;j<V;j++){
                    if(nums[k][j] != 1e8 && nums[i][k]!=1e8){
                        nums[i][j] = Math.min(nums[i][j], nums[i][k]+nums[k][j]);
                    }
                }
            }
        }
    }
    public static void main(String[] args){
        int INF = 100000000;

        int[][] dist = { { INF, 1, INF, INF },
                         { INF, INF, INF, 1 },
                         { INF , INF, INF, INF},
                         { 1, INF, 1, INF }};
        Floyd(dist);
        for (int i = 0; i < dist.length; i++) {
            for (int j = 0; j < dist.length; j++) {
                System.out.print(dist[i][j] + " ");
            }
            System.out.println();
        }
    }
}
